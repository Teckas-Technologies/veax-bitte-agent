{
    "openapi": "3.0.0",
    "info": {
        "title": "Veax Agent",
        "description": "API for the interaction between users and the Veax APIs through the chat interface.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://veax-bitte-agent.vercel.app"
        }
    ],
    "x-mb": {
        "account-id": "golden_comet.near",
        "email": "johnson@teckastechnologies.com",
        "assistant": {
            "name": "Veax Assistant",
            "description": "An assistant that provides blockchain-related information and interacts with Veax Contract and APIs to assist liquidity providers.",
            "instructions": "You are an assistant designed to help users perform various blockchain-related tasks by interacting with the Veax APIs and contract. Your primary functionalities include: 1) Provide the best suggestions to the liquidity providers by fetching pools and tokens details with the clear summary. 2) Add liquidity to the pool by collecting tokenSymbolA, tokenSymbolB and amount. Use 'generate-transaction' tool to add liquidity to the pool. 3) Swap tokens by collecting fromTokenSymbol, toTokenSymbol and amount. Use 'generate-transaction' tool to swap tokens. 4) Fetch all the liquidity positions by the walletAddress. 5) Fetch position details by positionId from the liquidity positions. 6) Fetch tokens list with by pageNo. Don't ask pageNo to user, initially the pageNo is 1, if user want to see more then call pageNo + 1, like 1 + 1 = 2. 7) Fetch liquidity paired tokens with the specific token. 8) Fetch the current market price of the token. 9) Fetch the historical token prices by the given time. Convert the natural language time to integer timestamp. 10) Fetch the token balance by the token symbol. 11) Fetch the list of pools. 12) Fetch the pool details by the tokens symbol paired in the pool. 13) Fetch the spot price of the pool. 14) Fetch the best pools to add liquidity for liquidity providers. 15) Fetch the risky liquidity pools to add liquidity for liquidity providers. If you reply with the list of details then show in tabular view. Don't show the token addresses to the user, If user wants to know the token address then only show it. Show only 4 digit after the floating point (Don't show like eg:1.2551e+26). Ensure all responses are accurate, user-friendly, and delivered promptly. Be ready to provide clear explanations of blockchain terminology and concepts when necessary. ",
            "tools": [
                {
                    "type": "generate-transaction"
                },
                {
                    "type": "generate-evm-tx"
                }
            ],
            "image": "https://docs.veax.com/img/logo.svg",
            "categories": [
                "DeFi",
                "Ai",
                "Veax"
            ]
        }
    },
    "paths": {
        "/api/swap": {
            "get": {
                "operationId": "swapTokens",
                "summary": "Execute swap from one token to another token.",
                "description": "Execute swap from one token to another token.",
                "parameters": [
                    {
                        "name": "fromTokenSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token symbol of the from token"
                    },
                    {
                        "name": "toTokenSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token symbol of the to token"
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The amount of from token the user want to swap."
                    },
                    {
                        "name": "slippage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slippage percentage. Default is 0.5. Others are 0.1, 1, 2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A swap was done successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "array",
                                            "description": "Array contains the transaction data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/add-liquidity": {
            "get": {
                "operationId": "addLiquidity",
                "summary": "Add liquidity to the pool",
                "description": "Add liquidity to the pool specified by the user by giving tokenA and tokenB",
                "parameters": [
                    {
                        "name": "tokenSymbolA",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token symbol for tokenA"
                    },
                    {
                        "name": "tokenSymbolB",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token symbol for tokenB"
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The amount of the tokenA."
                    },
                    {
                        "name": "feeTier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user selected fee tier for adding liquidity. Available fee tiers are 0.01%, 0.02%, 0.04%, 0.08%, 0.16%, 0.32%, 0.64%, 1.28%"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Liquidity was added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "array",
                                            "description": "Array contains the transaction data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/positions": {
            "get": {
                "operationId": "getPositions",
                "summary": "Fetch the position in the liquidity",
                "description": "Fetch the position in the liquidity",
                "parameters": [
                    {
                        "name": "pageNo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The specific page's token wamt to see."
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "positions": {
                                            "type": "array",
                                            "description": "List of user liquidity positions",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "tokens": {
                                                        "type": "array",
                                                        "description": "Tokens in the liquidity position",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "contract": {
                                                                    "type": "string",
                                                                    "description": "Token contract address"
                                                                },
                                                                "initial_liquidity": {
                                                                    "type": "string",
                                                                    "description": "Initial liquidity amount"
                                                                },
                                                                "current_liquidity": {
                                                                    "type": "string",
                                                                    "description": "Current liquidity amount"
                                                                },
                                                                "reward": {
                                                                    "type": "string",
                                                                    "description": "Current reward amount"
                                                                },
                                                                "total_reward": {
                                                                    "type": "string",
                                                                    "description": "Total reward accumulated"
                                                                },
                                                                "price_change": {
                                                                    "type": "string",
                                                                    "description": "Percentage change in token price"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "description": "Liquidity position ID"
                                                    },
                                                    "account_id": {
                                                        "type": "string",
                                                        "description": "Account associated with the liquidity position"
                                                    },
                                                    "pool_share": {
                                                        "type": "string",
                                                        "description": "User's share in the liquidity pool"
                                                    },
                                                    "fee": {
                                                        "type": "string",
                                                        "description": "Fee percentage"
                                                    },
                                                    "price_range": {
                                                        "type": "object",
                                                        "description": "Range of prices for liquidity",
                                                        "properties": {
                                                            "from": {
                                                                "type": "string",
                                                                "description": "Minimum price in range"
                                                            },
                                                            "to": {
                                                                "type": "string",
                                                                "description": "Maximum price in range"
                                                            }
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "integer",
                                                        "description": "Timestamp when the liquidity position was created"
                                                    },
                                                    "tx_hash": {
                                                        "type": "string",
                                                        "description": "Transaction hash of the liquidity action"
                                                    },
                                                    "liquidity": {
                                                        "type": "string",
                                                        "description": "Total liquidity in the position"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/positions/position": {
            "get": {
                "operationId": "getPositionDetails",
                "summary": "Fetch the position details of the liquidity by positionId",
                "description": "Fetch the position details of the liquidity by positionId",
                "parameters": [
                    {
                        "name": "positionId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The Id of the specific position in liquidity"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "example": "2.0",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "position-fetch",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "liquidity_position": {
                                                    "type": "object",
                                                    "description": "Details of the liquidity position",
                                                    "properties": {
                                                        "tokens": {
                                                            "type": "array",
                                                            "description": "Tokens in the liquidity position",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "contract": {
                                                                        "type": "string",
                                                                        "description": "Token contract address"
                                                                    },
                                                                    "initial_liquidity": {
                                                                        "type": "string",
                                                                        "description": "Initial liquidity amount"
                                                                    },
                                                                    "current_liquidity": {
                                                                        "type": "string",
                                                                        "description": "Current liquidity amount"
                                                                    },
                                                                    "reward": {
                                                                        "type": "string",
                                                                        "description": "Current reward amount"
                                                                    },
                                                                    "total_reward": {
                                                                        "type": "string",
                                                                        "description": "Total reward accumulated"
                                                                    },
                                                                    "price_change": {
                                                                        "type": "string",
                                                                        "description": "Percentage change in token price"
                                                                    },
                                                                    "code": {
                                                                        "type": "string",
                                                                        "description": "Token symbol"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Liquidity position ID"
                                                        },
                                                        "account_id": {
                                                            "type": "string",
                                                            "description": "Account associated with the liquidity position"
                                                        },
                                                        "pool_share": {
                                                            "type": "string",
                                                            "description": "User's share in the liquidity pool"
                                                        },
                                                        "fee": {
                                                            "type": "string",
                                                            "description": "Fee percentage"
                                                        },
                                                        "price_range": {
                                                            "type": "object",
                                                            "description": "Range of prices for liquidity",
                                                            "properties": {
                                                                "from": {
                                                                    "type": "string",
                                                                    "description": "Minimum price in range"
                                                                },
                                                                "to": {
                                                                    "type": "string",
                                                                    "description": "Maximum price in range"
                                                                }
                                                            }
                                                        },
                                                        "created_at": {
                                                            "type": "integer",
                                                            "description": "Timestamp when the liquidity position was created"
                                                        },
                                                        "tx_hash": {
                                                            "type": "string",
                                                            "description": "Transaction hash of the liquidity action"
                                                        },
                                                        "liquidity": {
                                                            "type": "string",
                                                            "description": "Total liquidity in the position"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens": {
            "get": {
                "operationId": "getTokens",
                "summary": "Fetch tokens in the NEAR protocol",
                "description": "Fetch tokens in the NEAR protocol ",
                "parameters": [
                    {
                        "name": "pageNo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The specific page's token wamt to see."
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search text to search the token by token address. eg: wrap.near"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tokens": {
                                            "type": "array",
                                            "description": "List of tokens with price and liquidity details",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Full name of the token"
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "description": "The symbol of the token"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "description": "The address of the token"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/liquidity-paired": {
            "get": {
                "operationId": "getPairedLiquidity",
                "summary": "Fetch the liquidities paired with the specific token.",
                "description": "Fetch the liquidities paired with the specific token.",
                "parameters": [
                    {
                        "name": "tokenSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains token details",
                                            "properties": {
                                                "tokens": {
                                                    "type": "array",
                                                    "description": "List of tokens with their liquidity status",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Full name of the token"
                                                            },
                                                            "symbol": {
                                                                "type": "string",
                                                                "description": "The symbol of the token"
                                                            },
                                                            "address": {
                                                                "type": "string",
                                                                "description": "Token contract address"
                                                            },
                                                            "with_liquidity": {
                                                                "type": "boolean",
                                                                "description": "Indicates if the token has liquidity available"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/price": {
            "get": {
                "operationId": "getTokenPrice",
                "summary": "Fetch the price of the token.",
                "description": "Fetch the price of the token in USD. ",
                "parameters": [
                    {
                        "name": "tokenSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "prices": {
                                            "type": "object",
                                            "description": "Key-value pair of token addresses and their prices",
                                            "additionalProperties": {
                                                "type": "string",
                                                "description": "Price of the token"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/historical-price": {
            "get": {
                "operationId": "getHistoricalTokenPrice",
                "summary": "Fetch the previous token price by the given time",
                "description": "Fetch the previous token price by the given time",
                "parameters": [
                    {
                        "name": "tokenSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the token."
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specific time of the token price"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "prices": {
                                            "type": "object",
                                            "description": "Key-value pair of token addresses and their prices",
                                            "additionalProperties": {
                                                "type": "string",
                                                "description": "Price of the token"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools": {
            "get": {
                "operationId": "getPools",
                "summary": "Fetch the pools list",
                "description": "Fetch the pools list ",
                "parameters": [
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The evm wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains pool details",
                                            "properties": {
                                                "pools": {
                                                    "type": "array",
                                                    "description": "List of liquidity pools",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "token_a": {
                                                                "type": "string",
                                                                "description": "Symbol of the first token in the pool"
                                                            },
                                                            "token_a_sc_address": {
                                                                "type": "string",
                                                                "description": "Smart contract address of token A"
                                                            },
                                                            "token_a_decimals": {
                                                                "type": "integer",
                                                                "description": "Decimals for token A"
                                                            },
                                                            "token_b": {
                                                                "type": "string",
                                                                "description": "Symbol of the second token in the pool"
                                                            },
                                                            "token_b_sc_address": {
                                                                "type": "string",
                                                                "description": "Smart contract address of token B"
                                                            },
                                                            "token_b_decimals": {
                                                                "type": "integer",
                                                                "description": "Decimals for token B"
                                                            },
                                                            "spot_price": {
                                                                "type": "string",
                                                                "description": "Spot price of token A relative to token B"
                                                            },
                                                            "stability": {
                                                                "type": "number",
                                                                "description": "Stability metric of the pool"
                                                            },
                                                            "total_liquidity": {
                                                                "type": "number",
                                                                "description": "Total liquidity in the pool"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/by-tokens": {
            "get": {
                "operationId": "getPoolDetails",
                "summary": "Fetch the pool details by the token pair addresses",
                "description": "Fetch the pool details by the token pair addresses",
                "parameters": [
                    {
                        "name": "tokenASymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the tokenA"
                    },
                    {
                        "name": "tokenBSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the tokenB"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "pool_details": {
                                            "type": "object",
                                            "properties": {
                                                "pool_id": {
                                                    "type": "integer",
                                                    "description": "Unique ID of the pool"
                                                },
                                                "token_a": {
                                                    "type": "string",
                                                    "description": "First token in the pool"
                                                },
                                                "token_b": {
                                                    "type": "string",
                                                    "description": "Second token in the pool"
                                                },
                                                "total_amount_a": {
                                                    "type": "string",
                                                    "description": "Total amount of token A"
                                                },
                                                "total_amount_b": {
                                                    "type": "string",
                                                    "description": "Total amount of token B"
                                                },
                                                "spot_price": {
                                                    "type": "string",
                                                    "description": "Spot price of the pool"
                                                },
                                                "tvl": {
                                                    "type": "string",
                                                    "description": "Total value locked"
                                                },
                                                "effective_tvl": {
                                                    "type": "string",
                                                    "description": "Effective total value locked"
                                                },
                                                "volume_24h": {
                                                    "type": "string",
                                                    "description": "24-hour trading volume"
                                                },
                                                "volume_7d": {
                                                    "type": "string",
                                                    "description": "7-day trading volume"
                                                },
                                                "lp_fee_24h": {
                                                    "type": "string",
                                                    "description": "Liquidity provider fees in 24h"
                                                },
                                                "lp_fee_7d": {
                                                    "type": "string",
                                                    "description": "Liquidity provider fees in 7d"
                                                },
                                                "fee_levels": {
                                                    "type": "array",
                                                    "description": "Different fee levels in the pool",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "fee_rate": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "description": "Fee rate applied"
                                                            },
                                                            "amount_a": {
                                                                "type": "string",
                                                                "description": "Amount of token A"
                                                            },
                                                            "amount_b": {
                                                                "type": "string",
                                                                "description": "Amount of token B"
                                                            },
                                                            "tvl": {
                                                                "type": "string",
                                                                "description": "TVL at this fee level"
                                                            },
                                                            "effective_tvl": {
                                                                "type": "string",
                                                                "description": "Effective TVL at this fee level"
                                                            },
                                                            "volume_24h": {
                                                                "type": "string",
                                                                "description": "24-hour volume"
                                                            },
                                                            "volume_7d": {
                                                                "type": "string",
                                                                "description": "7-day volume"
                                                            },
                                                            "fee_24h": {
                                                                "type": "string",
                                                                "description": "Fees in 24 hours"
                                                            },
                                                            "fee_7d": {
                                                                "type": "string",
                                                                "description": "Fees in 7 days"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/spot-price": {
            "get": {
                "operationId": "getSpotPriceOfPool",
                "summary": "Fetch the spot price of the pool",
                "description": "Fetch the spot price of the pool",
                "parameters": [
                    {
                        "name": "tokenASymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the tokenA"
                    },
                    {
                        "name": "tokenBSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the tokenB"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "spot_price": {
                                            "type": "string",
                                            "description": "The spot price of the pool"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/best-pools": {
            "get": {
                "operationId": "getBestPools",
                "summary": "Fetch the pools which are having the more liquidity",
                "description": "Fetch the pools which are having the more liquidity",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bestPools": {
                                            "type": "array",
                                            "description": "List of best liquidity pools",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "token_a": {
                                                        "type": "string",
                                                        "description": "Symbol of the first token in the pool"
                                                    },
                                                    "token_a_sc_address": {
                                                        "type": "string",
                                                        "description": "Smart contract address of token A"
                                                    },
                                                    "token_a_decimals": {
                                                        "type": "integer",
                                                        "description": "Decimals for token A"
                                                    },
                                                    "token_b": {
                                                        "type": "string",
                                                        "description": "Symbol of the second token in the pool"
                                                    },
                                                    "token_b_sc_address": {
                                                        "type": "string",
                                                        "description": "Smart contract address of token B"
                                                    },
                                                    "token_b_decimals": {
                                                        "type": "integer",
                                                        "description": "Decimals for token B"
                                                    },
                                                    "spot_price": {
                                                        "type": "string",
                                                        "description": "Spot price of token A relative to token B"
                                                    },
                                                    "stability": {
                                                        "type": "number",
                                                        "description": "Stability metric of the pool"
                                                    },
                                                    "total_liquidity": {
                                                        "type": "number",
                                                        "description": "Total liquidity in the pool"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/risky-pools": {
            "get": {
                "operationId": "getRiskyPools",
                "summary": "Fetch the pools which are the more risky",
                "description": "Fetch the pools which are the more risky",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "riskyPools": {
                                            "type": "array",
                                            "description": "List of risky liquidity pools",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "token_a": {
                                                        "type": "string",
                                                        "description": "Symbol of the first token in the pool"
                                                    },
                                                    "token_a_sc_address": {
                                                        "type": "string",
                                                        "description": "Smart contract address of token A"
                                                    },
                                                    "token_a_decimals": {
                                                        "type": "integer",
                                                        "description": "Decimals for token A"
                                                    },
                                                    "token_b": {
                                                        "type": "string",
                                                        "description": "Symbol of the second token in the pool"
                                                    },
                                                    "token_b_sc_address": {
                                                        "type": "string",
                                                        "description": "Smart contract address of token B"
                                                    },
                                                    "token_b_decimals": {
                                                        "type": "integer",
                                                        "description": "Decimals for token B"
                                                    },
                                                    "spot_price": {
                                                        "type": "string",
                                                        "description": "Spot price of token A relative to token B"
                                                    },
                                                    "stability": {
                                                        "type": "number",
                                                        "description": "Stability metric of the pool"
                                                    },
                                                    "total_liquidity": {
                                                        "type": "number",
                                                        "description": "Total liquidity in the pool"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/balance": {
            "get": {
                "operationId": "getBalance",
                "summary": "Fetch the user's wallet balance by token symbol",
                "description": "Fetch the user's wallet balance by token symbol ",
                "parameters": [
                    {
                        "name": "tokenSymbol",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The symbol of the token."
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "string",
                                            "description": "Human-readable balance string (e.g., in token units)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}