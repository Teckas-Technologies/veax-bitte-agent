{
    "openapi": "3.0.0",
    "info": {
        "title": "Veax Agent",
        "description": "API for the interaction between users and the Veax APIs through the chat interface.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://veax-bitte-agent.vercel.app"
        }
    ],
    "x-mb": {
        "account-id": "golden_comet.near",
        "email": "johnson@teckastechnologies.com",
        "assistant": {
            "name": "Veax Assistant",
            "description": "An assistant that provides blockchain-related information and interacts with Veax Contract and APIs to assist liquidity providers.",
            "instructions": "You are an assistant designed to help users perform various blockchain-related tasks by interacting with the Veax APIs and contract. Your primary functionalities include: 1) Provide the best suggestions to the liquidity providers by fetching pools and tokens details with the clear summary. 2) Add liquidity to the pool by collecting tokenA and tokenB. Use 'generate-transaction' tool to add liquidity to the pool. 3) Swap tokens by collecting fromTokenAddress, toTokenAddress and amount. Use 'generate-transaction' tool to swap tokens. 4) Fetch all the liquidity positions by the walletAddress. 5) Fetch position details by positionId from the liquidity positions. 6) Fetch tokens list with by pageNo. Don't ask pageNo to user, initially the pageNo is 1, if user want to see more then call pageNo + 1, like 1 + 1 = 2. 7) Fetch liquidity paired tokens with the specific token. 8) Fetch the current market price of the token. 9) Fetch the historical token prices by the given time. Convert the natural language time to integer timestamp. 10) Fetch the list of pools. 11) Fetch the pool details by the token pair addresses. 12) Fetch the spot price of the pool. 13) Fetch the best pools to add liquidity for liquidity providers. 14) Fetch the risky liquidity pools to add liquidity for liquidity providers. If you reply with the list of details then show in tabular view. Ensure all responses are accurate, user-friendly, and delivered promptly. Be ready to provide clear explanations of blockchain terminology and concepts when necessary. If an error occurs or the requested data isn't available, provide a clear and actionable error message.",
            "tools": [
                {
                    "type": "generate-transaction"
                },
                {
                    "type": "generate-evm-tx"
                }
            ],
            "image": "https://docs.veax.com/img/logo.svg",
            "categories": [
                "DeFi",
                "Ai",
                "Veax"
            ],
            "chainIds": [
                1
            ]
        }
    },
    "paths": {
        "/api/swap": {
            "get": {
                "operationId": "swapTokens",
                "summary": "Execute swap from one token to another token.",
                "description": "Execute swap from one token to another token.",
                "parameters": [
                    {
                        "name": "fromTokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address of the from token"
                    },
                    {
                        "name": "toTokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address of the to token"
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The amount of from token the user want to swap."
                    },
                    {
                        "name": "slippage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The slippage percentage. Default is 0.5. Others are 0.1, 1, 2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A swap was done successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "array",
                                            "description": "Array contains the transaction data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/add-liquidity": {
            "get": {
                "operationId": "addLiquidity",
                "summary": "Add liquidity to the pool",
                "description": "Add liquidity to the pool specified by the user by giving tokenA and tokenB",
                "parameters": [
                    {
                        "name": "tokenA",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenA"
                    },
                    {
                        "name": "tokenB",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenB"
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The amount of the tokenA."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Liquidity was added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "array",
                                            "description": "Array contains the transaction data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/positions": {
            "get": {
                "operationId": "getPositions",
                "summary": "Fetch the position in the liquidity",
                "description": "Fetch the position in the liquidity",
                "parameters": [
                    {
                        "name": "pageNo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The specific page's token wamt to see."
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "example": "2.0",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "liquidity_positions": {
                                                    "type": "array",
                                                    "description": "List of user liquidity positions",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "tokens": {
                                                                "type": "array",
                                                                "description": "Tokens in the liquidity position",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "contract": {
                                                                            "type": "string",
                                                                            "description": "Token contract address"
                                                                        },
                                                                        "initial_liquidity": {
                                                                            "type": "string",
                                                                            "description": "Initial liquidity amount"
                                                                        },
                                                                        "current_liquidity": {
                                                                            "type": "string",
                                                                            "description": "Current liquidity amount"
                                                                        },
                                                                        "reward": {
                                                                            "type": "string",
                                                                            "description": "Current reward amount"
                                                                        },
                                                                        "total_reward": {
                                                                            "type": "string",
                                                                            "description": "Total reward accumulated"
                                                                        },
                                                                        "price_change": {
                                                                            "type": "string",
                                                                            "description": "Percentage change in token price"
                                                                        },
                                                                        "code": {
                                                                            "type": "string",
                                                                            "description": "Token symbol"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "description": "Liquidity position ID"
                                                            },
                                                            "account_id": {
                                                                "type": "string",
                                                                "description": "Account associated with the liquidity position"
                                                            },
                                                            "pool_share": {
                                                                "type": "string",
                                                                "description": "User's share in the liquidity pool"
                                                            },
                                                            "fee": {
                                                                "type": "string",
                                                                "description": "Fee percentage"
                                                            },
                                                            "price_range": {
                                                                "type": "object",
                                                                "description": "Range of prices for liquidity",
                                                                "properties": {
                                                                    "from": {
                                                                        "type": "string",
                                                                        "description": "Minimum price in range"
                                                                    },
                                                                    "to": {
                                                                        "type": "string",
                                                                        "description": "Maximum price in range"
                                                                    }
                                                                }
                                                            },
                                                            "created_at": {
                                                                "type": "integer",
                                                                "description": "Timestamp when the liquidity position was created"
                                                            },
                                                            "tx_hash": {
                                                                "type": "string",
                                                                "description": "Transaction hash of the liquidity action"
                                                            },
                                                            "liquidity": {
                                                                "type": "string",
                                                                "description": "Total liquidity in the position"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/positions/position": {
            "get": {
                "operationId": "getPositionDetails",
                "summary": "Fetch the position details of the liquidity by positionId",
                "description": "Fetch the position details of the liquidity by positionId",
                "parameters": [
                    {
                        "name": "positionId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The Id of the specific position in liquidity"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "example": "2.0",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "position-fetch",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "liquidity_position": {
                                                    "type": "object",
                                                    "description": "Details of the liquidity position",
                                                    "properties": {
                                                        "tokens": {
                                                            "type": "array",
                                                            "description": "Tokens in the liquidity position",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "contract": {
                                                                        "type": "string",
                                                                        "description": "Token contract address"
                                                                    },
                                                                    "initial_liquidity": {
                                                                        "type": "string",
                                                                        "description": "Initial liquidity amount"
                                                                    },
                                                                    "current_liquidity": {
                                                                        "type": "string",
                                                                        "description": "Current liquidity amount"
                                                                    },
                                                                    "reward": {
                                                                        "type": "string",
                                                                        "description": "Current reward amount"
                                                                    },
                                                                    "total_reward": {
                                                                        "type": "string",
                                                                        "description": "Total reward accumulated"
                                                                    },
                                                                    "price_change": {
                                                                        "type": "string",
                                                                        "description": "Percentage change in token price"
                                                                    },
                                                                    "code": {
                                                                        "type": "string",
                                                                        "description": "Token symbol"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "id": {
                                                            "type": "string",
                                                            "description": "Liquidity position ID"
                                                        },
                                                        "account_id": {
                                                            "type": "string",
                                                            "description": "Account associated with the liquidity position"
                                                        },
                                                        "pool_share": {
                                                            "type": "string",
                                                            "description": "User's share in the liquidity pool"
                                                        },
                                                        "fee": {
                                                            "type": "string",
                                                            "description": "Fee percentage"
                                                        },
                                                        "price_range": {
                                                            "type": "object",
                                                            "description": "Range of prices for liquidity",
                                                            "properties": {
                                                                "from": {
                                                                    "type": "string",
                                                                    "description": "Minimum price in range"
                                                                },
                                                                "to": {
                                                                    "type": "string",
                                                                    "description": "Maximum price in range"
                                                                }
                                                            }
                                                        },
                                                        "created_at": {
                                                            "type": "integer",
                                                            "description": "Timestamp when the liquidity position was created"
                                                        },
                                                        "tx_hash": {
                                                            "type": "string",
                                                            "description": "Transaction hash of the liquidity action"
                                                        },
                                                        "liquidity": {
                                                            "type": "string",
                                                            "description": "Total liquidity in the position"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens": {
            "get": {
                "operationId": "getTokens",
                "summary": "Fetch tokens in the NEAR protocol",
                "description": "Fetch tokens in the NEAR protocol ",
                "parameters": [
                    {
                        "name": "pageNo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The specific page's token wamt to see."
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search text to search the token by token address. eg: wrap.near"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tokens": {
                                            "type": "array",
                                            "description": "List of tokens with price and liquidity details",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "sc_address": {
                                                        "type": "string",
                                                        "description": "Smart contract address of the token"
                                                    },
                                                    "price": {
                                                        "type": "string",
                                                        "description": "Current price of the token"
                                                    },
                                                    "price_change": {
                                                        "type": "string",
                                                        "description": "Percentage change in price"
                                                    },
                                                    "tvl": {
                                                        "type": "string",
                                                        "description": "Total value locked (TVL) in the token"
                                                    },
                                                    "volume_24h": {
                                                        "type": "string",
                                                        "description": "Trading volume in the last 24 hours"
                                                    },
                                                    "volume_7d": {
                                                        "type": "string",
                                                        "description": "Trading volume in the last 7 days"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Full name of the token"
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "description": "Ticker symbol of the token"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/liquidity-paired": {
            "get": {
                "operationId": "getPairedLiquidity",
                "summary": "Fetch the liquidities paired with the specific token.",
                "description": "Fetch the liquidities paired with the specific token.",
                "parameters": [
                    {
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The address of the token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains token details",
                                            "properties": {
                                                "tokens": {
                                                    "type": "array",
                                                    "description": "List of tokens with their liquidity status",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "address": {
                                                                "type": "string",
                                                                "description": "Token contract address"
                                                            },
                                                            "with_liquidity": {
                                                                "type": "boolean",
                                                                "description": "Indicates if the token has liquidity available"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/price": {
            "get": {
                "operationId": "getTokenPrice",
                "summary": "Fetch the price of the token.",
                "description": "Fetch the price of the token in USD. ",
                "parameters": [
                    {
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The address of the token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains price details of tokens",
                                            "properties": {
                                                "prices": {
                                                    "type": "object",
                                                    "description": "Key-value pair of token addresses and their prices",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "description": "Price of the token"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/historical-price": {
            "get": {
                "operationId": "getHistoricalTokenPrice",
                "summary": "Fetch the previous token price by the given time",
                "description": "Fetch the previous token price by the given time",
                "parameters": [
                    {
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The address of the token."
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specific time of the token price"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains price details of tokens",
                                            "properties": {
                                                "prices": {
                                                    "type": "object",
                                                    "description": "Key-value pair of token addresses and their prices",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "description": "Price of the token"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools": {
            "get": {
                "operationId": "getPools",
                "summary": "Fetch the pools list",
                "description": "Fetch the pools list ",
                "parameters": [
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The evm wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains pool details",
                                            "properties": {
                                                "pools": {
                                                    "type": "array",
                                                    "description": "List of liquidity pools",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "token_a": {
                                                                "type": "string",
                                                                "description": "Address of the first token in the pool"
                                                            },
                                                            "token_b": {
                                                                "type": "string",
                                                                "description": "Address of the second token in the pool"
                                                            },
                                                            "reserve_a": {
                                                                "type": "string",
                                                                "description": "Reserve amount of token A in the pool"
                                                            },
                                                            "reserve_b": {
                                                                "type": "string",
                                                                "description": "Reserve amount of token B in the pool"
                                                            },
                                                            "spot_price": {
                                                                "type": "string",
                                                                "description": "Current spot price of token A relative to token B"
                                                            },
                                                            "liquidities": {
                                                                "type": "array",
                                                                "description": "List of liquidity values in the pool",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "Liquidity value"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/by-tokens": {
            "get": {
                "operationId": "getPoolDetails",
                "summary": "Fetch the pool details by the token pair addresses",
                "description": "Fetch the pool details by the token pair addresses",
                "parameters": [
                    {
                        "name": "tokenA",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenA"
                    },
                    {
                        "name": "tokenB",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenB"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "pool": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "description": "Unique identifier for the pool"
                                                        },
                                                        "token_a": {
                                                            "type": "string",
                                                            "description": "First token in the pool"
                                                        },
                                                        "token_b": {
                                                            "type": "string",
                                                            "description": "Second token in the pool"
                                                        },
                                                        "total_amount_a": {
                                                            "type": "string",
                                                            "description": "Total amount of token A in the pool"
                                                        },
                                                        "total_amount_b": {
                                                            "type": "string",
                                                            "description": "Total amount of token B in the pool"
                                                        },
                                                        "spot_price": {
                                                            "type": "string",
                                                            "description": "Current spot price of the pool"
                                                        },
                                                        "tvl": {
                                                            "type": "string",
                                                            "description": "Total value locked in the pool"
                                                        },
                                                        "effective_tvl": {
                                                            "type": "string",
                                                            "description": "Effective total value locked in the pool"
                                                        },
                                                        "volume_24h": {
                                                            "type": "string",
                                                            "description": "Trading volume in the last 24 hours"
                                                        },
                                                        "volume_7d": {
                                                            "type": "string",
                                                            "description": "Trading volume in the last 7 days"
                                                        },
                                                        "fee_levels": {
                                                            "type": "array",
                                                            "description": "Different fee levels in the pool",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount_a": {
                                                                        "type": "string",
                                                                        "description": "Amount of token A at this fee level"
                                                                    },
                                                                    "amount_b": {
                                                                        "type": "string",
                                                                        "description": "Amount of token B at this fee level"
                                                                    },
                                                                    "fee_rate": {
                                                                        "type": "string",
                                                                        "description": "Fee rate applied at this level"
                                                                    },
                                                                    "tvl": {
                                                                        "type": "string",
                                                                        "description": "Total value locked at this fee level"
                                                                    },
                                                                    "liquidity": {
                                                                        "type": "string",
                                                                        "description": "Liquidity available at this fee level"
                                                                    },
                                                                    "effective_tvl": {
                                                                        "type": "string",
                                                                        "description": "Effective total value locked at this fee level"
                                                                    },
                                                                    "volume_24h": {
                                                                        "type": "string",
                                                                        "description": "24-hour trading volume at this fee level"
                                                                    },
                                                                    "volume_delta_24h": {
                                                                        "type": "string",
                                                                        "description": "Change in volume in the last 24 hours"
                                                                    },
                                                                    "volume_7d": {
                                                                        "type": "string",
                                                                        "description": "7-day trading volume at this fee level"
                                                                    },
                                                                    "volume_delta_7d": {
                                                                        "type": "string",
                                                                        "description": "Change in volume in the last 7 days"
                                                                    },
                                                                    "fee_24h": {
                                                                        "type": "string",
                                                                        "description": "Total fees collected in the last 24 hours"
                                                                    },
                                                                    "fee_delta_24h": {
                                                                        "type": "string",
                                                                        "description": "Change in fees collected in the last 24 hours"
                                                                    },
                                                                    "fee_7d": {
                                                                        "type": "string",
                                                                        "description": "Total fees collected in the last 7 days"
                                                                    },
                                                                    "fee_delta_7d": {
                                                                        "type": "string",
                                                                        "description": "Change in fees collected in the last 7 days"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "liquidities": {
                                                            "type": "array",
                                                            "description": "List of liquidities available in the pool",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/spot-price": {
            "get": {
                "operationId": "getSpotPriceOfPool",
                "summary": "Fetch the spot price of the pool",
                "description": "Fetch the spot price of the pool",
                "parameters": [
                    {
                        "name": "tokenA",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenA"
                    },
                    {
                        "name": "tokenB",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenB"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains price details and pool existence status",
                                            "properties": {
                                                "prices": {
                                                    "type": "array",
                                                    "description": "List of token prices",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "Token price value"
                                                    }
                                                },
                                                "pool_exist": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether the pool exists"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/best-pools": {
            "get": {
                "operationId": "getBestPools",
                "summary": "Fetch the pools which are having the more liquidity",
                "description": "Fetch the pools which are having the more liquidity",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bestPools": {
                                            "type": "array",
                                            "description": "List of best liquidity pools",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "token_a": {
                                                        "type": "string",
                                                        "description": "Address of the first token in the pool"
                                                    },
                                                    "token_b": {
                                                        "type": "string",
                                                        "description": "Address of the second token in the pool"
                                                    },
                                                    "reserve_a": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token A in the pool"
                                                    },
                                                    "reserve_b": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token B in the pool"
                                                    },
                                                    "spot_price": {
                                                        "type": "string",
                                                        "description": "Current spot price of token A relative to token B"
                                                    },
                                                    "liquidities": {
                                                        "type": "array",
                                                        "description": "List of liquidity values in the pool",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "Liquidity value"
                                                        }
                                                    },
                                                    "totalLiquidity": {
                                                        "type": "number",
                                                        "description": "Total liquidity available in the pool"
                                                    },
                                                    "stability": {
                                                        "type": "number",
                                                        "description": "Stability factor of the pool"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/risky-pools": {
            "get": {
                "operationId": "getRiskyPools",
                "summary": "Fetch the pools which are the more risky",
                "description": "Fetch the pools which are the more risky",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "riskyPools": {
                                            "type": "array",
                                            "description": "List of risky liquidity pools",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "token_a": {
                                                        "type": "string",
                                                        "description": "Address of the first token in the risky pool"
                                                    },
                                                    "token_b": {
                                                        "type": "string",
                                                        "description": "Address of the second token in the risky pool"
                                                    },
                                                    "reserve_a": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token A in the pool"
                                                    },
                                                    "reserve_b": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token B in the pool"
                                                    },
                                                    "spot_price": {
                                                        "type": "string",
                                                        "description": "Current spot price of token A relative to token B"
                                                    },
                                                    "liquidities": {
                                                        "type": "array",
                                                        "description": "List of liquidity values in the pool",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "Liquidity value"
                                                        }
                                                    },
                                                    "totalLiquidity": {
                                                        "type": "number",
                                                        "description": "Total liquidity available in the risky pool"
                                                    },
                                                    "stability": {
                                                        "type": "number",
                                                        "description": "Stability factor of the risky pool"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/balance": {
            "get": {
                "operationId": "getBalance",
                "summary": "Fetch the user's wallet balances",
                "description": "Fetch the user's wallet balance details ",
                "parameters": [
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The evm wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "balances": {
                                            "type": "object",
                                            "description": "Fetch balace details of the user with the token details"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}