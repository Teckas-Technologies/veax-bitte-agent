{
    "openapi": "3.0.0",
    "info": {
        "title": "Veax Agent",
        "description": "API for the interaction between users and the Veax APIs through the chat interface.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://veax-bitte-agent.vercel.app"
        }
    ],
    "x-mb": {
        "account-id": "golden_comet.near",
        "email": "johnson@teckastechnologies.com",
        "assistant": {
            "name": "Veax Assistant",
            "description": "An assistant that provides blockchain-related information and interacts with Veax Contract and APIs to assist liquidity providers.",
            "instructions": "You are an assistant designed to help users perform various blockchain-related tasks by interacting with the Veax APIs and contract. Your primary functionalities include: 1) Provide the best suggestions to the liquidity providers by fetching pools and tokens details with the clear summary. 2) Add liquidity to the pool by collecting tokenA and tokenB. Use 'generate-transaction' to to add liquidity to the pool. 3) Fetch tokens list with by pageNo. Don't ask pageNo to user, initially the pageNo is 1, if user want to see more then call pageNo + 1, like 1 + 1 = 2. 4) Fetch liquidity paired tokens with the specific token. 5) Fetch the current market price of the token. 6) Fetch the historical token prices by the given time. Convert the natural language time to integer timestamp. 7) Fetch the list of pools. 8) Fetch the spot price of the pool. 9) Fetch the best pools to add liquidity for liquidity providers. 10) Fetch the risky liquidity pools to add liquidity for liquidity providers. If you reply with the list of details then show in tabular view. Ensure all responses are accurate, user-friendly, and delivered promptly. Be ready to provide clear explanations of blockchain terminology and concepts when necessary. If an error occurs or the requested data isn't available, provide a clear and actionable error message.",
            "tools": [
                {
                    "type": "generate-transaction"
                },
                {
                    "type": "generate-evm-tx"
                }
            ],
            "image": "https://docs.veax.com/img/logo.svg",
            "categories": [
                "DeFi",
                "Ai",
                "Veax"
            ],
            "chainIds": [
                1
            ]
        }
    },
    "paths": {
        "/api/add-liquidity": {
            "get": {
                "operationId": "addLiquidity",
                "summary": "Add liquidity to the pool",
                "description": "Add liquidity to the pool specified by the user by giving tokenA and tokenB",
                "parameters": [
                    {
                        "name": "tokenA",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenA"
                    },
                    {
                        "name": "tokenB",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenB"
                    },
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The near wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Liquidity was added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactionData": {
                                            "type": "array",
                                            "description": "Array contains the transaction data."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens": {
            "get": {
                "operationId": "getTokens",
                "summary": "Fetch tokens in the NEAR protocol",
                "description": "Fetch tokens in the NEAR protocol ",
                "parameters": [
                    {
                        "name": "pageNo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The specific page's token wamt to see."
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search text to search the token by token address. eg: wrap.near"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains token details and total count",
                                            "properties": {
                                                "tokens": {
                                                    "type": "array",
                                                    "description": "List of tokens with details",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "sc_address": {
                                                                "type": "string",
                                                                "description": "Smart contract address of the token"
                                                            },
                                                            "price": {
                                                                "type": "string",
                                                                "description": "Current price of the token"
                                                            },
                                                            "price_change": {
                                                                "type": "string",
                                                                "description": "Percentage change in price"
                                                            },
                                                            "tvl": {
                                                                "type": "string",
                                                                "description": "Total value locked for the token"
                                                            },
                                                            "volume_24h": {
                                                                "type": "string",
                                                                "description": "Trading volume in the last 24 hours"
                                                            },
                                                            "volume_7d": {
                                                                "type": "string",
                                                                "description": "Trading volume in the last 7 days"
                                                            }
                                                        }
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of tokens"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/liquidity-paired": {
            "get": {
                "operationId": "getPairedLiquidity",
                "summary": "Fetch the liquidities paired with the specific token.",
                "description": "Fetch the liquidities paired with the specific token.",
                "parameters": [
                    {
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The address of the token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains token details",
                                            "properties": {
                                                "tokens": {
                                                    "type": "array",
                                                    "description": "List of tokens with their liquidity status",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "address": {
                                                                "type": "string",
                                                                "description": "Token contract address"
                                                            },
                                                            "with_liquidity": {
                                                                "type": "boolean",
                                                                "description": "Indicates if the token has liquidity available"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/price": {
            "get": {
                "operationId": "getTokenPrice",
                "summary": "Fetch the price of the token.",
                "description": "Fetch the price of the token in USD. ",
                "parameters": [
                    {
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The address of the token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains price details of tokens",
                                            "properties": {
                                                "prices": {
                                                    "type": "object",
                                                    "description": "Key-value pair of token addresses and their prices",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "description": "Price of the token"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tokens/historical-price": {
            "get": {
                "operationId": "getHistoricalTokenPrice",
                "summary": "Fetch the previous token price by the given time",
                "description": "Fetch the previous token price by the given time",
                "parameters": [
                    {
                        "name": "tokenAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The address of the token."
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specific time of the token price"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains price details of tokens",
                                            "properties": {
                                                "prices": {
                                                    "type": "object",
                                                    "description": "Key-value pair of token addresses and their prices",
                                                    "additionalProperties": {
                                                        "type": "string",
                                                        "description": "Price of the token"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools": {
            "get": {
                "operationId": "getPools",
                "summary": "Fetch the pools list",
                "description": "Fetch the pools list ",
                "parameters": [
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The evm wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains pool details",
                                            "properties": {
                                                "pools": {
                                                    "type": "array",
                                                    "description": "List of liquidity pools",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "token_a": {
                                                                "type": "string",
                                                                "description": "Address of the first token in the pool"
                                                            },
                                                            "token_b": {
                                                                "type": "string",
                                                                "description": "Address of the second token in the pool"
                                                            },
                                                            "reserve_a": {
                                                                "type": "string",
                                                                "description": "Reserve amount of token A in the pool"
                                                            },
                                                            "reserve_b": {
                                                                "type": "string",
                                                                "description": "Reserve amount of token B in the pool"
                                                            },
                                                            "spot_price": {
                                                                "type": "string",
                                                                "description": "Current spot price of token A relative to token B"
                                                            },
                                                            "liquidities": {
                                                                "type": "array",
                                                                "description": "List of liquidity values in the pool",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "Liquidity value"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/spot-price": {
            "get": {
                "operationId": "getSpotPriceOfPool",
                "summary": "Fetch the spot price of the pool",
                "description": "Fetch the spot price of the pool",
                "parameters": [
                    {
                        "name": "tokenA",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenA"
                    },
                    {
                        "name": "tokenB",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The token address for tokenB"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jsonrpc": {
                                            "type": "string",
                                            "description": "JSON-RPC version"
                                        },
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "Unique request identifier"
                                        },
                                        "result": {
                                            "type": "object",
                                            "description": "Contains price details and pool existence status",
                                            "properties": {
                                                "prices": {
                                                    "type": "array",
                                                    "description": "List of token prices",
                                                    "items": {
                                                        "type": "string",
                                                        "description": "Token price value"
                                                    }
                                                },
                                                "pool_exist": {
                                                    "type": "boolean",
                                                    "description": "Indicates whether the pool exists"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/best-pools": {
            "get": {
                "operationId": "getBestPools",
                "summary": "Fetch the pools which are having the more liquidity",
                "description": "Fetch the pools which are having the more liquidity",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bestPools": {
                                            "type": "array",
                                            "description": "List of best liquidity pools",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "token_a": {
                                                        "type": "string",
                                                        "description": "Address of the first token in the pool"
                                                    },
                                                    "token_b": {
                                                        "type": "string",
                                                        "description": "Address of the second token in the pool"
                                                    },
                                                    "reserve_a": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token A in the pool"
                                                    },
                                                    "reserve_b": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token B in the pool"
                                                    },
                                                    "spot_price": {
                                                        "type": "string",
                                                        "description": "Current spot price of token A relative to token B"
                                                    },
                                                    "liquidities": {
                                                        "type": "array",
                                                        "description": "List of liquidity values in the pool",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "Liquidity value"
                                                        }
                                                    },
                                                    "totalLiquidity": {
                                                        "type": "number",
                                                        "description": "Total liquidity available in the pool"
                                                    },
                                                    "stability": {
                                                        "type": "number",
                                                        "description": "Stability factor of the pool"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pools/risky-pools": {
            "get": {
                "operationId": "getRiskyPools",
                "summary": "Fetch the pools which are the more risky",
                "description": "Fetch the pools which are the more risky",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "riskyPools": {
                                            "type": "array",
                                            "description": "List of risky liquidity pools",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "token_a": {
                                                        "type": "string",
                                                        "description": "Address of the first token in the risky pool"
                                                    },
                                                    "token_b": {
                                                        "type": "string",
                                                        "description": "Address of the second token in the risky pool"
                                                    },
                                                    "reserve_a": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token A in the pool"
                                                    },
                                                    "reserve_b": {
                                                        "type": "string",
                                                        "description": "Reserve amount of token B in the pool"
                                                    },
                                                    "spot_price": {
                                                        "type": "string",
                                                        "description": "Current spot price of token A relative to token B"
                                                    },
                                                    "liquidities": {
                                                        "type": "array",
                                                        "description": "List of liquidity values in the pool",
                                                        "items": {
                                                            "type": "string",
                                                            "description": "Liquidity value"
                                                        }
                                                    },
                                                    "totalLiquidity": {
                                                        "type": "number",
                                                        "description": "Total liquidity available in the risky pool"
                                                    },
                                                    "stability": {
                                                        "type": "number",
                                                        "description": "Stability factor of the risky pool"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/balance": {
            "get": {
                "operationId": "getBalance",
                "summary": "Fetch the user's wallet balances",
                "description": "Fetch the user's wallet balance details ",
                "parameters": [
                    {
                        "name": "walletAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The evm wallet address of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "balances": {
                                            "type": "object",
                                            "description": "Fetch balace details of the user with the token details"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}